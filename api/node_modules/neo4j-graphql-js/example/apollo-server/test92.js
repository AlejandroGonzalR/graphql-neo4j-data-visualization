export const typeDefs = `
type Person {
    id: ID!
    name: String
    yodawg: [Movie] @relation(name: "ACTED_IN", direction: "OUT")
    moviesProduced: [Movie] @relation(name: "PRODUCED", direction: "OUT")
  }
  
  
  type Movie {
    id: ID!
    title: String
    actors(first: Int = 10, offset: Int = 0): [Person] @relation(name: "ACTED_IN", direction: "IN")
    producers(first: Int = 10, offset: Int = 0): [Person] @relation(name: "PRODUCED", direction: "IN")
    writers(first: Int = 10, offset: Int = 0): [Person] @relation(name: "WROTE", direction: "IN")
    reviewers(first: Int = 10, offset: Int = 0): [Person] @relation(name: "REVIEWED", direction: "IN")
  }
  
  enum _UserOrdering {
    name_asc
    name_desc
  }
  
  type Query {
      people(id: ID, name: String, first: Int = 10, offset: Int = 0, orderBy: _UserOrdering): [Person]
      movies(id: ID, name: String, first: Int = 10, offset: Int = 0): [Movie]
  }`