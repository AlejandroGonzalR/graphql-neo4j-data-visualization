import { makeAugmentedSchema } from '../../src/index';
import { ApolloServer } from 'apollo-server';
import { v1 as neo4j } from 'neo4j-driver';

const typeDefs = `
interface Location {
    name: String!
    parentLocation: Location
  }
  
  type City implements Location{
    name: String!
    parentLocation: Location @relation(name: "CHILD_OF", direction: OUT)
  }
  
  type Country implements Location{
    name: String!
    parentLocation: Location @relation(name: "CHILD_OF", direction: OUT)
  }
  
  type Company {
    name: String!
    locations: [Location!]! @relation(name: "LOCATED_IN", direction: OUT)
  }
`;

const schema = makeAugmentedSchema({ typeDefs });

const driver = neo4j.driver(
  'bolt://localhost:7687',
  neo4j.auth.basic('neo4j', 'letmein')
);

const server = new ApolloServer({ schema, context: { driver } });

server.listen(3003, '0.0.0.0').then(({ url }) => {
  console.log(`GraphQL API ready at ${url}`);
});
